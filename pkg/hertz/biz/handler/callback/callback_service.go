// Code generated by hertz generator.

package callback

import (
	"context"
	"files/pkg/drivers/sync/seahub"
	"files/pkg/hertz/biz/handler"
	http2 "files/pkg/http"

	callback "files/pkg/hertz/biz/model/callback"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CallbackCreateMethod .
// @router /callback/create [POST]
func CallbackCreateMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req callback.CallbackCreateReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(callback.CallbackCreateResp)
	handler.CommonConvert(c, http2.MonkeyHandle(seahub.CallbackCreateHandler, "/callback/create"), resp, true)
}

// CallbackDeleteMethod .
// @router /callback/delete [POST]
func CallbackDeleteMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req callback.CallbackDeleteReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(callback.CallbackDeleteResp)
	handler.CommonConvert(c, http2.MonkeyHandle(seahub.CallbackDeleteHandler, "/callback/delete"), resp, true)
}
