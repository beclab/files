// Code generated by hertz generator.

package paste

import (
	"context"
	"files/pkg/hertz/biz/handler"
	http2 "files/pkg/http"

	paste "files/pkg/hertz/biz/model/api/paste"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// PasteMethod .
// @router /api/paste/*node [PATCH]
func PasteMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req paste.PasteReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(paste.PasteResp)
	handler.CommonConvert(c, http2.WrapperPasteArgs("/api/paste"), resp, false)
}

// GetTaskMethod .
// @router /api/task/*node [GET]
func GetTaskMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req paste.GetTaskReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(paste.GetTaskResp)
	handler.CommonConvert(c, http2.WrapperTaskArgs("/api/task"), resp, false)
}

// DeleteTaskMethod .
// @router /api/task/*node [DELETE]
func DeleteTaskMethod(ctx context.Context, c *app.RequestContext) {
	var err error
	var req paste.DeleteTaskReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(paste.DeleteTaskResp)
	handler.CommonConvert(c, http2.WrapperTaskArgs("/api/task"), resp, false)
}
